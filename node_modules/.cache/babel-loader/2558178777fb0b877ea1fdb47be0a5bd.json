{"ast":null,"code":"var _jsxFileName = \"/Users/virginia/Desktop/programacio\\u0301n/REACT UDEMY/app-order-food/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n  const existingCartItem = state.items[existingCartItemIndex];\n  let updatedItem;\n  let updatedItems;\n\n  if (existingCartItem) {}\n\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/virginia/Desktop/programación/REACT UDEMY/app-order-food/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItem","updatedItems","type","concat","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAMC,qBAAqB,GAAGF,KAAK,CAACH,KAAN,CAAYM,SAAZ,CAC3BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACG,IAAP,CAAYC,EADN,CAA9B;AAIA,QAAMC,gBAAgB,GAAGN,KAAK,CAACH,KAAN,CAAYK,qBAAZ,CAAzB;AACA,MAAIK,WAAJ;AACA,MAAIC,YAAJ;;AAEA,MAAIF,gBAAJ,EAAsB,CACrB;;AAED,MAAIL,MAAM,CAACQ,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMD,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYa,MAAZ,CAAmBT,MAAM,CAACG,IAA1B,CAArB;AAEA,UAAMO,kBAAkB,GACtBX,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYQ,KAAZ,GAAoBX,MAAM,CAACG,IAAP,CAAYS,MADtD;AAEA,WAAO;AACLhB,MAAAA,KAAK,EAAEW,YADF;AAELV,MAAAA,WAAW,EAAEa;AAFR,KAAP;AAID;;AACD,SAAOf,gBAAP;AACD,CAvBD;;AAyBA,MAAMkB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMsB,oBAAoB,GAAId,IAAD,IAAU;AACrCa,IAAAA,kBAAkB,CAAC;AAAER,MAAAA,IAAI,EAAE,KAAR;AAAeL,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMe,yBAAyB,GAAId,EAAD,IAAQ;AACxCY,IAAAA,kBAAkB,CAAC;AAAER,MAAAA,IAAI,EAAE,QAAR;AAAkBJ,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMe,WAAW,GAAG;AAClBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADC;AAElBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFL;AAGlBuB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BD;;GAAMT,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  const existingCartItemIndex = state.items.findIndex(\n    (item) => item.id === action.item.id\n  );\n\n  const existingCartItem = state.items[existingCartItemIndex];\n  let updatedItem;\n  let updatedItems;\n\n  if (existingCartItem) {\n  }\n\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}